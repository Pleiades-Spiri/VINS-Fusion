%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1       
num_of_cam: 2  

imu_topic: "/mavros/imu/data_raw"
image0_topic: "/stereo/left/image_raw"
image1_topic: "/stereo/right/image_raw"
output_path: "~/Documents/Vinsoutput/"

cam0_calib: "spiri_left_mei.yaml"
cam1_calib: "spiri_right_mei.yaml"
image_width: 320
image_height: 240
   
cam0_frame: "camera"
# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
#   data: [1, 0, 0, 0,0, 1, 0, 0,0, 0, 1, 0,0, 0, 0, 1]
#   data: [1, 0, 0, 0,
#          0, 0, 1, 0,
#         0, -1, 0, 0,
#         0, 0, 0, 1]

######calibration using VINS

#   data: [-0.0314367, -0.1048035, 0.9939960, -0.1400578,
#           -0.9994485, 0.0139412, -0.0301392, -0.24588266,
#           -0.0106988, -0.9943953, -0.1051840, -0.0530172,
#           0, 0, 0, 1]

#######Approximation
#   data: [0, 0, 1, 0.05,
#           -1, 0, 0, -0.024588266,
#           0, -1, 0, -0.0230172,
#           0, 0, 0, 1]
 
###Calibration using kalibr camera-IMU

#   data: [-0.17768957, -0.98363869,  0.02968749, -0.05046214, 0.01344498, -0.03259131, -0.99937833, -0.14403866, 0.98399474, -0.17717995,  0.01901614,  0.14132623, 0,          0,          0,  1]

#####Calibration using kalibr IMU-camera

#   data: [-0.178,0.013,0.984,-0.146,-0.984,-0.033,-0.177,-0.029,0.030,-0.999,0.019,-0.145,0,0,0,1]
##### Approximate
#data: [0,0,1,-0.146,-1,0,0,-0.029,0,-1,0,-0.145,0,0,0,1]

####### Calibration for Spiri original piece, based on camera angle to be 115 degree on y-axis then -90 degree on z-axis ###### 


#   data: [1.0,  0.0000000,  0.0, 0.08505,   0.0000000,  -0.4226183,  0.9063078, -0.0265, 0.0,  -0.9063078,  -0.4226183, 0.0562,0,0,0,1]
#   data: [-0.4226183,  0.0000000, 0.9063078 , 0.08505, 0.0000000,  1.0000000,  0.0000000, -0.0265, -0.9063078,  0.0000000, -0.4226183,0.0562,0,0,0,1]
#   data: [-0.0000000, 0.4226183,  0.9063078, 0.08505,1.0000000,  0.0000000, -0.0000000, -0.0265, 0.0000000, 0.9063078, 0.4226183,0.0562 ,0,0,0,1]
#   data: [ 0.0000000,  1.0000000,  0.0000000, 0.08505, 0.4226183, -0.0000000,  0.9063078, -0.0265,   0.9063078, -0.0000000, -0.4226183,0.0562 ,0,0,0,1]
#   data: [ 1.0000000,  0.0000000,  0.0000000, 0.08505 , 0.0000000, -0.4226183,  0.9063078, -0.0265,  0.0000000, -0.9063078, -0.4226183,0.0562 ,0,0,0,1]
#   data: [ -0.4480736,  0.0000000,  0.8939967, 0.08505 ,-0.8452160, -0.3258098, -0.4236246, -0.0265,  0.2912729, -0.9454353,  0.1459868 ,0.0562 ,0,0,0,1]
#   data: [ 1.0000000,  0.0000000,  0.0000000, 0.08505 , 0.0000000, -0.4226183,  -0.9063078, -0.0265,  0.0000000, 0.9063078, -0.4226183,0.0562 ,0,0,0,1]
#   data: [-0.4226183,  0.0000000, -0.9063078 , 0.08505, 0.0000000,  1.0000000,  0.0000000, -0.0265, 0.9063078,  0.0000000, -0.4226183,0.0562,0,0,0,1]
#   data: [-0.0000000, 0.4226183,  0.9063078, 0.08505,1.0000000,  0.0000000, -0.0000000, -0.0265, 0.0000000, 0.9063078, -0.4226183,-0.0562 ,0,0,0,1]


   data: [-0.0000000, -0.4226183,  0.9063078, 0.08505,-1.0000000,  0.0000000, -0.0000000, 0.0265, 0.0000000, -0.9063078, -0.4226183,-0.0562 ,0,0,0,1]
body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d

#########Calibration using kalibr camera chain 
#   data: [0.9978637525647839, 0.0036026455073081528, 0.06522999511481427, -0.056945809329366326,
#           -0.002402876934313183, 0.9998266750330234, -0.01846201708508103, -3.64110598651395e-05,
#           -0.06528520123097244, 0.018265837997747343, 0.9976994545766144, 0.0011564817104661662,
#           0, 0, 0, 1]
########Approximation
#   data: [1, 0, 0,-0.056945809329366326,0, 1, 0,-3.64110598651395e-05,0, 0, 1, 0.0011564817104661662,0, 0, 0, 1]

##############Calibration using VINS
#   data: [-0.0133507, -0.3623425,  0.9319494, 0.00116850528242,
#          -0.9147946, -0.3718677, -0.1576874, 0.00298001668251,
#           0.4036987, -0.8546475, -0.3265043, -0.0160487496035,
#          0, 0, 0, 1]
######Approximation
#   data: [0, 0,  1, 0.05,-1, 0, 0, 0.024588266,0, -1, 0, -0.0230,0, 0, 0, 1]

########Calibration using Kalibr camera-IMU
#   data: [-0.11307557, -0.99321226,  0.02726409, -0.09860036, -0.00429691, -0.026951, -0.99962752, -0.14653802, 0.9935771,  -0.1131506,  -0.00122025,  0.14282103, 0,  0, 0,  1 ]

########Calibration usning Kalibr IMU-camera
#   data: [-0.113,-0.003,0.994,-0.154,-0.993,-0.027,-0.113,-0.086,0.027,-1,-0.001,-0.144,0,0,0,1]
#######Approximate
#   data: [0,0,1,-0.154,-1,0,0,-0.086,0,-1,0,-0.144,0,0,0,1]

####### Calibration for Spiri original piece, based on camera angle to be 115 degree on y-axis then -90 degree on z-axis ###### 
#   data: [1.0,  0.0000000,  0.0, 0.08505,   0.0000000,  -0.4226183,  0.9063078, 0.0265, 0.0,  -0.9063078,  -0.4226183, 0.0562,0,0,0,1]
#   data: [-0.4226183,  0.0000000, 0.9063078 , 0.08505, 0.0000000,  1.0000000,  0.0000000, 0.0265, -0.9063078,  0.0000000, -0.4226183,0.0562,0,0,0,1]
#   data: [-0.0000000, 0.4226183,  0.9063078, 0.08505,1.0000000,  0.0000000, -0.0000000, 0.0265, 0.0000000, 0.9063078, 0.4226183,0.0562 ,0,0,0,1]
#   data: [-0.4226183,  0.0000000, -0.9063078 , 0.08505, 0.0000000,  1.0000000,  0.0000000, 0.0265, -0.9063078,  0.0000000, -0.4226183,0.0562,0,0,0,1]
#   data: [ 0.0000000,  1.0000000,  0.0000000, 0.08505, 0.4226183, -0.0000000,  0.9063078, 0.0265,   0.9063078, -0.0000000, -0.4226183,0.0562 ,0,0,0,1]
#   data: [ 1.0000000,  0.0000000,  0.0000000, 0.08505 , 0.0000000, -0.4226183,  0.9063078, 0.0265,  0.0000000, -0.9063078, -0.4226183,0.0562 ,0,0,0,1]
#   data: [ -0.4480736,  0.0000000,  0.8939967, 0.08505 ,-0.8452160, -0.3258098, -0.4236246, 0.0265,  0.2912729, -0.9454353,  0.1459868 ,0.0562 ,0,0,0,1]
#   data: [ 1.0000000,  0.0000000,  0.0000000, 0.08505 , 0.0000000, -0.4226183,  -0.9063078, 0.0265,  0.0000000, 0.9063078, -0.4226183,0.0562 ,0,0,0,1]
#  data: [-0.4226183,  0.0000000, -0.9063078 , 0.08505, 0.0000000,  1.0000000,  0.0000000, 0.0265, 0.9063078,  0.0000000, -0.4226183,0.0562,0,0,0,1]
#   data: [-0.0000000, 0.4226183,  0.9063078, 0.08505,1.0000000,  0.0000000, -0.0000000, 0.0265, 0.0000000, 0.9063078, -0.4226183,-0.0562 ,0,0,0,1]


   data: [-0.0000000, -0.4226183,  0.9063078, 0.08505,-1.0000000,  0.0000000, -0.0000000, -0.0265, 0.0000000, -0.9063078, -0.4226183,-0.0562 ,0,0,0,1]
#Multiple thread support
multiple_thread: 1

#feature traker paprameter
max_cnt: 100            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 0           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.2        # accelerometer measurement noise standard deviation. #0.2
gyr_n: 0.05         # gyroscope measurement noise standard deviation.     #0.05
acc_w: 0.4         # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 4.0e-4       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.81007     # gravity magnitude

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 1        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "~/Documents/Vinsoutput/pose_graph/" # save and load path
save_image: 0                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
